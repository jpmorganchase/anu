{"/lesson.js":"import * as anu from \"@jpmorganchase/anu\";\nimport penguins from \"./penguins.json\" assert {type: 'json'}\nimport { extent, scaleLinear, scaleOrdinal } from \"d3\";\nimport { Vector3 } from \"@babylonjs/core\";\n\nexport default (scene) => {\n    \n    let cot = anu.bind('cot');\n\n    let marks = cot.bind('sphere', {segments: 16}, penguins);\n\n    let scaleX = scaleLinear().domain(extent([...penguins.map(item => item[\"Beak Length (mm)\"])])).range([-5,5])\n\n    let scaleY  = scaleLinear().domain(extent([...penguins.map(item => item[\"Flipper Length (mm)\"])])).range([-5,5])\n\n    let scaleZ = scaleLinear().domain(extent([...penguins.map(item => item[\"Beak Depth (mm)\"])])).range([-5,5])\n\n    let scaleSize = scaleLinear().domain(extent([...penguins.map(item => item[\"Body Mass (g)\"])])).range([0.1, 0.5])\n\n    let materials = anu.ordinalChromatic('d310').toStandardMaterial();\n    let colorScale = scaleOrdinal(materials)\n\n    marks.positionX((d) => scaleX(d[\"Beak Length (mm)\"]))\n         .positionY((d) => scaleY(d[\"Flipper Length (mm)\"]))\n         .positionZ((d) => scaleZ(d[\"Beak Depth (mm)\"]))\n         .scaling((d) => {\n            let scaleFactor = scaleSize(d[\"Body Mass (g)\"])\n            return new Vector3(scaleFactor,scaleFactor,scaleFactor)\n         })\n         .material((d) => colorScale(d[\"Species\"]))\n \n\n\n    return scene\n}"}