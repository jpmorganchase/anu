{"/lesson.js":"import { Vector3, ExecuteCodeAction, ActionManager} from \"@babylonjs/core\";\nimport * as anu from \"@jpmorganchase/anu\";\n\nexport default (scene) => {\n\n  //anu.create returns a mesh object that we can modify using Babylon functions\n  let box = anu.create(\"box\", \"myBox\");\n  box.position = new Vector3(-1,0,0);\n\n  let sphere = anu.create(\"sphere\", \"mySphere\");\n  sphere.position = new Vector3(1,0,0);\n\n  let shapes = anu.selectName(['mySphere', 'myBox'], scene)\n\n  shapes.action((d,n,i) => new ExecuteCodeAction( //This action takes three arguments \n    ActionManager.OnPointerOverTrigger, //The type of trigger\n    () => {\n      n.scaling = new Vector3(2,2,2) //The function to execute \n    },\n    undefined //An optional condition to evaluate before triggering\n  ))\n  .action((d,n,i) => new ExecuteCodeAction( //Lets make an inverse action on point out\n    ActionManager.OnPointerOutTrigger, \n    () => {\n      n.scaling = new Vector3(1,1,1) \n    },\n    undefined \n  ))\n      \n  return scene\n}"}