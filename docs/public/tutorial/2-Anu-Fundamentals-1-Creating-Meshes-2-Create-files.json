{"/lesson.js":"import * as anu from \"@jpmorganchase/anu\";\n\nexport default (scene) => {\n    \n    let data = {goals: 5, assists: 10, points: 2};\n\n    let box \n\n    return scene\n}","/main.js":"\r\nimport \"@babylonjs/core/Debug/debugLayer\";\r\nimport \"@babylonjs/inspector\";\r\nimport { HemisphericLight, ArcRotateCamera, Vector3, Scene, Engine} from '@babylonjs/core';\r\nimport lesson from \"./lesson\";\r\n\r\n\r\n//Grab DOM element where we will attach our canvas. #app is the id assigned to an empty <div> in our index.html \r\nconst app = document.querySelector('#app');\r\n//Create a canvas element and append it to #app div\r\nconst canvas = document.createElement('canvas');\r\napp.appendChild(canvas);\r\n\r\n//initialize babylon engine, passing in our target canvas element, and create a new scene\r\nconst babylonEngine = new Engine(canvas, true)\r\n\r\n//create a scene object using our engine\r\nconst scene = new Scene(babylonEngine)\r\n\r\n//Add lights and a camera\r\nnew HemisphericLight('light1', new Vector3(0, 10, 0), scene)\r\nconst camera = new ArcRotateCamera(\"Camera\", -(Math.PI / 4) * 3, Math.PI / 4, 10, new Vector3(0, 0, 0), scene);\r\ncamera.position = new Vector3(-10, 10, -20)\r\ncamera.attachControl(true)\r\n\r\n//Call your function executing our lesson code from lesson.js passing our scene for support \r\nlesson(scene)\r\n\r\n\r\n//Render the scene we created\r\nbabylonEngine.runRenderLoop(() => {\r\n  scene.render()\r\n})\r\n\r\n//Listen for window size changes and resize the scene accordingly \r\nwindow.addEventListener(\"resize\", function () {\r\n  babylonEngine.resize();\r\n});\r\n\r\n\r\nscene.debugLayer.show({embedMode: true});\r\n\r\n\r\n// hide/show the Inspector with i\r\nwindow.addEventListener(\"keydown\", (ev) => {\r\n    if (ev.key == 'I') {\r\n        if (scene.debugLayer.isVisible()) {\r\n            scene.debugLayer.hide();\r\n        } else {\r\n            scene.debugLayer.show({embedMode: true});\r\n        }\r\n    }\r\n});\r\n"}